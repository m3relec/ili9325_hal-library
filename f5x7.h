/*
    created with FontEditor written by H. Reddmann
    HaReddmann at t-online dot de

    File Name           : f5x7.h
    Date                : 2011/05/29
    Font size in bytes  : 0x020A, 522
    Font width          : 6
    Font height         : 7
    Font first char     : 0x20
    Font last char      : 0x7F
    Font bits per pixel : 1
    Font is compressed  : false

    The font data are defined as

    struct _FONT_ {
     // common shared fields
       uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
       uint8_t    font_Width_in_Pixel_for_fixed_drawing;
       uint8_t    font_Height_in_Pixel_for_all_Characters;
       uint8_t    font_Bits_per_Pixels;
                    // if MSB are set then font is a compressed font
       uint8_t    font_First_Char;
       uint8_t    font_Last_Char;
       uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
                    // for each character the separate width in pixels,
                    // characters < 128 have an implicit virtual right empty row
                    // characters with font_Char_Widths[] == 0 are undefined

     // if compressed font then additional fields
       uint8_t    font_Byte_Padding;
                    // each Char in the table are aligned in size to this value
       uint8_t    font_RLE_Table[3];
                    // Run Length Encoding Table for compression
       uint8_t    font_Char_Size_in_Bytes[font_Last_Char - font_First_Char +1];
                    // for each char the size in (bytes / font_Byte_Padding) are stored,
                    // this get us the table to seek to the right beginning of each char
                    // in the font_data[].

     // for compressed and uncompressed fonts
       uint8_t    font_data[];
                    // bit field of all characters
    }
*/

#ifndef f5x7_H
#define f5x7_H

#define f5x7_WIDTH 6
#define f5x7_HEIGHT 7

	const unsigned char f5x7[] = {
    0x02, 0x54, 0x06, 0x07, 0x01, 0x20, 0xBB,
    0x03, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 
    0x00, 0x00, 0x00, 0x00, 0xF8, 0x02, 0x00, 0x80, 0x01, 0x60, 0x00, 0xA0, 0xFC, 0x29, 0x7F, 0x0A, 
    0x49, 0xF5, 0x57, 0x49, 0x46, 0x13, 0x04, 0x59, 0x6C, 0x4B, 0x56, 0x45, 0x50, 0x40, 0x61, 0x00, 
    0x00, 0x00, 0x38, 0xA2, 0x20, 0x00, 0x10, 0x14, 0x71, 0x00, 0x08, 0x15, 0x47, 0x85, 0x40, 0x20, 
    0x7C, 0x08, 0x04, 0x00, 0x0A, 0x03, 0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x83, 0x01, 0x00, 
    0x10, 0x04, 0x41, 0x10, 0xF8, 0xA2, 0xC9, 0xA2, 0x0F, 0x20, 0xFC, 0x03, 0x01, 0xC2, 0x70, 0x34, 
    0x69, 0x0C, 0x05, 0x8B, 0xCB, 0x18, 0x86, 0x22, 0xF9, 0x43, 0x4E, 0xC5, 0x62, 0x31, 0xC7, 0x53, 
    0x26, 0x93, 0xB0, 0x40, 0x3C, 0x51, 0x18, 0xD8, 0x92, 0xC9, 0xA4, 0xCD, 0x90, 0x4C, 0xA6, 0x3C, 
    0x00, 0x9B, 0x0D, 0x00, 0x00, 0x58, 0x6D, 0x00, 0x00, 0x00, 0x41, 0x11, 0x05, 0x29, 0x14, 0x0A, 
    0x85, 0x12, 0x14, 0x51, 0x10, 0x00, 0x41, 0x20, 0x9A, 0x30, 0xC8, 0x92, 0xF9, 0xA0, 0xCF, 0x1F, 
    0x89, 0x44, 0xFC, 0xFF, 0x64, 0x32, 0x69, 0xF3, 0x05, 0x83, 0x41, 0xD1, 0x3F, 0x18, 0x14, 0x71, 
    0xFE, 0xC9, 0x64, 0x32, 0xF8, 0x4F, 0x24, 0x02, 0x01, 0x5F, 0x30, 0x18, 0x95, 0xFD, 0x11, 0x08, 
    0xC4, 0x1F, 0x10, 0xFC, 0x07, 0x01, 0x10, 0x50, 0xE8, 0x17, 0xF8, 0x23, 0x28, 0xA2, 0xE0, 0x1F, 
    0x08, 0x04, 0x02, 0xFF, 0x02, 0x82, 0xE0, 0xFF, 0x27, 0x20, 0x20, 0x7F, 0x5F, 0x30, 0x18, 0xF4, 
    0xFD, 0x13, 0x89, 0x84, 0xC1, 0x17, 0x8C, 0x86, 0xBC, 0xFF, 0x44, 0x26, 0x65, 0x34, 0x26, 0x93, 
    0xC9, 0x58, 0x20, 0xF0, 0x0F, 0x04, 0x7E, 0x40, 0x20, 0xF0, 0xF7, 0x01, 0x01, 0x41, 0x9F, 0x3F, 
    0x08, 0x03, 0xFA, 0x8F, 0x29, 0x08, 0xCA, 0x78, 0x40, 0xC0, 0x13, 0x06, 0xE1, 0x68, 0xB2, 0x38, 
    0x04, 0x00, 0xFE, 0xC1, 0xA0, 0x80, 0x80, 0x80, 0x80, 0x82, 0xC1, 0x3F, 0x00, 0x40, 0x10, 0x04, 
    0x04, 0x04, 0x20, 0x10, 0x08, 0x04, 0x02, 0x02, 0x02, 0x02, 0x00, 0x44, 0xA5, 0x52, 0xF1, 0x7F, 
    0x24, 0x91, 0x88, 0xC3, 0x11, 0x89, 0x44, 0x10, 0x8E, 0x48, 0x44, 0xFE, 0x71, 0x54, 0x2A, 0x15, 
    0x83, 0xF0, 0x27, 0x02, 0x02, 0x04, 0x85, 0x4A, 0xE5, 0xFD, 0x11, 0x04, 0x02, 0x1E, 0x40, 0xEC, 
    0x03, 0x01, 0x20, 0x20, 0xB1, 0x07, 0x00, 0xFC, 0x21, 0x28, 0x22, 0x20, 0xF8, 0x07, 0x02, 0xF8, 
    0x04, 0x0C, 0x01, 0xCF, 0x47, 0x10, 0x08, 0x78, 0x1C, 0x91, 0x48, 0xC4, 0xF1, 0x29, 0x14, 0x0A, 
    0x02, 0x41, 0xA1, 0x60, 0xF8, 0x7C, 0x04, 0x81, 0x80, 0x40, 0x52, 0xA9, 0x54, 0x10, 0xE1, 0x47, 
    0x04, 0x82, 0x78, 0x40, 0x20, 0x88, 0xCF, 0x01, 0x01, 0x41, 0x1C, 0x1E, 0x10, 0x06, 0xE4, 0x11, 
    0x51, 0x10, 0x14, 0x91, 0x01, 0x85, 0x42, 0x79, 0x44, 0x32, 0x95, 0x49, 0x04, 0x20, 0x6C, 0x41, 
    0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0x41, 0x1B, 0x02, 0x80, 0x40, 0xA8, 0x38, 0x08, 0x04, 0x47, 
    0x85, 0x40, 0x10, 0x0C, 0x07, 0x03, 0x01, 0x02, 0x83, 0xC3, 0x20, 0x80, 0xBF, 0x8F, 0x83, 0x00, 
    0x00
};

#endif

